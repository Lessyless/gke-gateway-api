/*
* Copyright 2024 Google LLC
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     https://www.apache.org/licenses/LICENSE-2.0
*
*     Unless required by applicable law or agreed to in writing, software
*     distributed under the License is distributed on an "AS IS" BASIS,
*     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*     See the License for the specific language governing permissions and
*     limitations under the License.
 */

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	networkingv1 "github.com/GoogleCloudPlatform/gke-gateway-api/apis/networking/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// GCPSessionAffinityPolicyLister helps list GCPSessionAffinityPolicies.
// All objects returned here must be treated as read-only.
type GCPSessionAffinityPolicyLister interface {
	// List lists all GCPSessionAffinityPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*networkingv1.GCPSessionAffinityPolicy, err error)
	// GCPSessionAffinityPolicies returns an object that can list and get GCPSessionAffinityPolicies.
	GCPSessionAffinityPolicies(namespace string) GCPSessionAffinityPolicyNamespaceLister
	GCPSessionAffinityPolicyListerExpansion
}

// gCPSessionAffinityPolicyLister implements the GCPSessionAffinityPolicyLister interface.
type gCPSessionAffinityPolicyLister struct {
	listers.ResourceIndexer[*networkingv1.GCPSessionAffinityPolicy]
}

// NewGCPSessionAffinityPolicyLister returns a new GCPSessionAffinityPolicyLister.
func NewGCPSessionAffinityPolicyLister(indexer cache.Indexer) GCPSessionAffinityPolicyLister {
	return &gCPSessionAffinityPolicyLister{listers.New[*networkingv1.GCPSessionAffinityPolicy](indexer, networkingv1.Resource("gcpsessionaffinitypolicy"))}
}

// GCPSessionAffinityPolicies returns an object that can list and get GCPSessionAffinityPolicies.
func (s *gCPSessionAffinityPolicyLister) GCPSessionAffinityPolicies(namespace string) GCPSessionAffinityPolicyNamespaceLister {
	return gCPSessionAffinityPolicyNamespaceLister{listers.NewNamespaced[*networkingv1.GCPSessionAffinityPolicy](s.ResourceIndexer, namespace)}
}

// GCPSessionAffinityPolicyNamespaceLister helps list and get GCPSessionAffinityPolicies.
// All objects returned here must be treated as read-only.
type GCPSessionAffinityPolicyNamespaceLister interface {
	// List lists all GCPSessionAffinityPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*networkingv1.GCPSessionAffinityPolicy, err error)
	// Get retrieves the GCPSessionAffinityPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*networkingv1.GCPSessionAffinityPolicy, error)
	GCPSessionAffinityPolicyNamespaceListerExpansion
}

// gCPSessionAffinityPolicyNamespaceLister implements the GCPSessionAffinityPolicyNamespaceLister
// interface.
type gCPSessionAffinityPolicyNamespaceLister struct {
	listers.ResourceIndexer[*networkingv1.GCPSessionAffinityPolicy]
}
