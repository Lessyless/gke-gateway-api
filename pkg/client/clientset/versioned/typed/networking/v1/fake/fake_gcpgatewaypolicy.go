/*
* Copyright 2024 Google LLC
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     https://www.apache.org/licenses/LICENSE-2.0
*
*     Unless required by applicable law or agreed to in writing, software
*     distributed under the License is distributed on an "AS IS" BASIS,
*     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*     See the License for the specific language governing permissions and
*     limitations under the License.
 */

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/GoogleCloudPlatform/gke-gateway-api/apis/networking/v1"
	networkingv1 "github.com/GoogleCloudPlatform/gke-gateway-api/pkg/client/clientset/versioned/typed/networking/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeGCPGatewayPolicies implements GCPGatewayPolicyInterface
type fakeGCPGatewayPolicies struct {
	*gentype.FakeClientWithList[*v1.GCPGatewayPolicy, *v1.GCPGatewayPolicyList]
	Fake *FakeNetworkingV1
}

func newFakeGCPGatewayPolicies(fake *FakeNetworkingV1, namespace string) networkingv1.GCPGatewayPolicyInterface {
	return &fakeGCPGatewayPolicies{
		gentype.NewFakeClientWithList[*v1.GCPGatewayPolicy, *v1.GCPGatewayPolicyList](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("gcpgatewaypolicies"),
			v1.SchemeGroupVersion.WithKind("GCPGatewayPolicy"),
			func() *v1.GCPGatewayPolicy { return &v1.GCPGatewayPolicy{} },
			func() *v1.GCPGatewayPolicyList { return &v1.GCPGatewayPolicyList{} },
			func(dst, src *v1.GCPGatewayPolicyList) { dst.ListMeta = src.ListMeta },
			func(list *v1.GCPGatewayPolicyList) []*v1.GCPGatewayPolicy { return list.Items },
			func(list *v1.GCPGatewayPolicyList, items []*v1.GCPGatewayPolicy) {
				list.Items = items
			},
		),
		fake,
	}
}
